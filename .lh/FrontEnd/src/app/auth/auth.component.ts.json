{
    "sourceFile": "FrontEnd/src/app/auth/auth.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 28,
            "patches": [
                {
                    "date": 1740665106531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740676312851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,16 @@\n import { Component } from '@angular/core';\r\n \r\n @Component({\r\n-  selector: 'auth-',\r\n+  selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-\r\n+  username: string = '';\r\n+  password: string = '';\r\n+  email: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740676482895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,9 @@\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-  username: string = '';\r\n-  password: string = '';\r\n-  email: string = '';\r\n+\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740676494984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-\r\n+  username: string = '';\r\n+  password: string = '';\r\n+  email: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740676518599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   username: string = '';\r\n+  confirmPassword: string = '';\r\n   password: string = '';\r\n   email: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n"
                },
                {
                    "date": 1740676542557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-  username: string = '';\r\n   confirmPassword: string = '';\r\n   password: string = '';\r\n   email: string = '';\r\n   toggleForm() {\r\n"
                },
                {
                    "date": 1740676554657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,21 @@\n import { Component } from '@angular/core';\r\n+import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-  confirmPassword: string = '';\r\n+  constructor(private fb: FormBuilder) {}\r\n+\r\n+  authForm: FormGroup = this.fb.group({\r\n+    email: ['', [Validators.required, Validators.email]],\r\n+    password: ['', [Validators.required, Validators.minLength(6)]],\r\n+    confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n+  });\r\n   password: string = '';\r\n   email: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n"
                },
                {
                    "date": 1740676571035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,17 @@\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-  constructor(private fb: FormBuilder) {}\r\n+  authForm: FormGroup;\r\n \r\n-  authForm: FormGroup = this.fb.group({\r\n-    email: ['', [Validators.required, Validators.email]],\r\n-    password: ['', [Validators.required, Validators.minLength(6)]],\r\n-    confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n-  });\r\n+  constructor(private fb: FormBuilder) {\r\n+    this.authForm = this.fb.group({\r\n+      email: ['', [Validators.required, Validators.email]],\r\n+      password: ['', [Validators.required, Validators.minLength(6)]],\r\n+      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n+    });\r\n+  }\r\n   password: string = '';\r\n   email: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n"
                },
                {
                    "date": 1740676764409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n     });\r\n   }\r\n   password: string = '';\r\n   email: string = '';\r\n+  confirmPassword: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740676778451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,8 @@\n       password: ['', [Validators.required, Validators.minLength(6)]],\r\n       confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n     });\r\n   }\r\n-  password: string = '';\r\n-  email: string = '';\r\n-  confirmPassword: string = '';\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740676921326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,6 @@\n   }\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n+  \r\n }\r\n"
                },
                {
                    "date": 1740676926453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,6 @@\n   }\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n-  \r\n+\r\n }\r\n"
                },
                {
                    "date": 1740676942495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n-\r\n+import { HttpClient } from '@angular/common/http';\r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n"
                },
                {
                    "date": 1740676949081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,39 @@\n import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { HttpClient } from '@angular/common/http';\r\n+import { Router } from '@angular/router';\r\n+\r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   authForm: FormGroup;\r\n+  errorMessage: string = '';\r\n \r\n-  constructor(private fb: FormBuilder) {\r\n+  constructor(\r\n+    private fb: FormBuilder,\r\n+    private http: HttpClient,\r\n+    private router: Router\r\n+  ) {\r\n     this.authForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', [Validators.required, Validators.minLength(6)]],\r\n       confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n     });\r\n   }\r\n+\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n+    this.errorMessage = '';\r\n+    this.authForm.reset();\r\n   }\r\n \r\n-}\r\n+  login() {\r\n+    if (this.authForm.invalid) {\r\n+      return;\r\n+    }\r\n+\r\n+    const loginData = {\r\n"
                },
                {
                    "date": 1740676958311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,4 +36,53 @@\n       return;\r\n     }\r\n \r\n     const loginData = {\r\n+      email: this.authForm.get('email')?.value,\r\n+      password: this.authForm.get('password')?.value\r\n+    };\r\n+\r\n+    this.http.post<any>('http://your-api-url/login', loginData)\r\n+      .subscribe({\r\n+        next: (response) => {\r\n+          // Store the token in localStorage\r\n+          localStorage.setItem('token', response.token);\r\n+          // Navigate to home page or dashboard\r\n+          this.router.navigate(['/dashboard']);\r\n+        },\r\n+        error: (error) => {\r\n+          this.errorMessage = error.error.message || 'Login failed. Please try again.';\r\n+        }\r\n+      });\r\n+  }\r\n+\r\n+  register() {\r\n+    if (this.authForm.invalid) {\r\n+      return;\r\n+    }\r\n+\r\n+    if (this.authForm.get('password')?.value !== this.authForm.get('confirmPassword')?.value) {\r\n+      this.errorMessage = 'Passwords do not match';\r\n+      return;\r\n+    }\r\n+\r\n+    const registerData = {\r\n+      email: this.authForm.get('email')?.value,\r\n+      password: this.authForm.get('password')?.value\r\n+    };\r\n+\r\n+    this.http.post<any>('http://your-api-url/register', registerData)\r\n+      .subscribe({\r\n+        next: (response) => {\r\n+          this.errorMessage = '';\r\n+          // Optionally auto-login after registration\r\n+          this.showLogin = true;\r\n+          this.authForm.reset();\r\n+          // Or show success message\r\n+          this.errorMessage = 'Registration successful! Please log in.';\r\n+        },\r\n+        error: (error) => {\r\n+          this.errorMessage = error.error.message || 'Registration failed. Please try again.';\r\n+        }\r\n+      });\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1740676996066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,53 +36,4 @@\n       return;\r\n     }\r\n \r\n     const loginData = {\r\n-      email: this.authForm.get('email')?.value,\r\n-      password: this.authForm.get('password')?.value\r\n-    };\r\n-\r\n-    this.http.post<any>('http://your-api-url/login', loginData)\r\n-      .subscribe({\r\n-        next: (response) => {\r\n-          // Store the token in localStorage\r\n-          localStorage.setItem('token', response.token);\r\n-          // Navigate to home page or dashboard\r\n-          this.router.navigate(['/dashboard']);\r\n-        },\r\n-        error: (error) => {\r\n-          this.errorMessage = error.error.message || 'Login failed. Please try again.';\r\n-        }\r\n-      });\r\n-  }\r\n-\r\n-  register() {\r\n-    if (this.authForm.invalid) {\r\n-      return;\r\n-    }\r\n-\r\n-    if (this.authForm.get('password')?.value !== this.authForm.get('confirmPassword')?.value) {\r\n-      this.errorMessage = 'Passwords do not match';\r\n-      return;\r\n-    }\r\n-\r\n-    const registerData = {\r\n-      email: this.authForm.get('email')?.value,\r\n-      password: this.authForm.get('password')?.value\r\n-    };\r\n-\r\n-    this.http.post<any>('http://your-api-url/register', registerData)\r\n-      .subscribe({\r\n-        next: (response) => {\r\n-          this.errorMessage = '';\r\n-          // Optionally auto-login after registration\r\n-          this.showLogin = true;\r\n-          this.authForm.reset();\r\n-          // Or show success message\r\n-          this.errorMessage = 'Registration successful! Please log in.';\r\n-        },\r\n-        error: (error) => {\r\n-          this.errorMessage = error.error.message || 'Registration failed. Please try again.';\r\n-        }\r\n-      });\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1740677026297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,72 @@\n import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { HttpClient } from '@angular/common/http';\r\n-import { Router } from '@angular/router';\r\n-\r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   authForm: FormGroup;\r\n-  errorMessage: string = '';\r\n \r\n-  constructor(\r\n-    private fb: FormBuilder,\r\n-    private http: HttpClient,\r\n-    private router: Router\r\n-  ) {\r\n+  constructor(private fb: FormBuilder) {\r\n     this.authForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', [Validators.required, Validators.minLength(6)]],\r\n       confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n     });\r\n   }\r\n-\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n-    this.errorMessage = '';\r\n-    this.authForm.reset();\r\n   }\r\n+  private http = inject(HttpClient);\r\n+  private router = inject(Router);\r\n+  private authService = inject(AuthService);\r\n \r\n   login() {\r\n-    if (this.authForm.invalid) {\r\n-      return;\r\n+    if (this.authForm.valid) {\r\n+      const credentials = {\r\n+        email: this.authForm.get('email')?.value,\r\n+        password: this.authForm.get('password')?.value\r\n+      };\r\n+      \r\n+      this.authService.login(credentials).subscribe({\r\n+        next: (response) => {\r\n+          // Store token or user data if needed\r\n+          this.router.navigate(['/dashboard']);\r\n+        },\r\n+        error: (error) => {\r\n+          console.error('Login failed', error);\r\n+          // Handle error (show message to user)\r\n+        }\r\n+      });\r\n     }\r\n+  }\r\n \r\n-    const loginData = {\r\n+  register() {\r\n+    if (this.authForm.valid && this.checkPasswordMatch()) {\r\n+      const userData = {\r\n+        email: this.authForm.get('email')?.value,\r\n+        password: this.authForm.get('password')?.value\r\n+      };\r\n+      \r\n+      this.authService.register(userData).subscribe({\r\n+        next: (response) => {\r\n+          // Show success message\r\n+          this.showLogin = true; // Switch to login form\r\n+        },\r\n+        error: (error) => {\r\n+          console.error('Registration failed', error);\r\n+          // Handle error (show message to user)\r\n+        }\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  checkPasswordMatch(): boolean {\r\n+    const password = this.authForm.get('password')?.value;\r\n+    const confirmPassword = this.authForm.get('confirmPassword')?.value;\r\n+    return password === confirmPassword;\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1740677048522,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Component } from '@angular/core';\r\n+import { Component, inject } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { HttpClient } from '@angular/common/http';\r\n @Component({\r\n   selector: 'auth-app',\r\n"
                },
                {
                    "date": 1740677059254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { Component, inject } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { HttpClient } from '@angular/common/http';\r\n+import { Router } from 'express';\r\n+import { AuthService } from '../services/auth.service';\r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n"
                },
                {
                    "date": 1740677069020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         email: this.authForm.get('email')?.value,\r\n         password: this.authForm.get('password')?.value\r\n       };\r\n       \r\n-      this.authService.register(userData).subscribe({\r\n+      this.user.register(userData).subscribe({\r\n         next: (response) => {\r\n           // Show success message\r\n           this.showLogin = true; // Switch to login form\r\n         },\r\n"
                },
                {
                    "date": 1740677084666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,7 @@\n-import { Component, inject } from '@angular/core';\r\n+import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n-import { HttpClient } from '@angular/common/http';\r\n-import { Router } from 'express';\r\n-import { AuthService } from '../services/auth.service';\r\n+\r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss']\r\n@@ -21,54 +19,6 @@\n   }\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n-  private http = inject(HttpClient);\r\n-  private router = inject(Router);\r\n-  private authService = inject(AuthService);\r\n \r\n-  login() {\r\n-    if (this.authForm.valid) {\r\n-      const credentials = {\r\n-        email: this.authForm.get('email')?.value,\r\n-        password: this.authForm.get('password')?.value\r\n-      };\r\n-      \r\n-      this.authService.login(credentials).subscribe({\r\n-        next: (response) => {\r\n-          // Store token or user data if needed\r\n-          this.router.navigate(['/dashboard']);\r\n-        },\r\n-        error: (error) => {\r\n-          console.error('Login failed', error);\r\n-          // Handle error (show message to user)\r\n-        }\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  register() {\r\n-    if (this.authForm.valid && this.checkPasswordMatch()) {\r\n-      const userData = {\r\n-        email: this.authForm.get('email')?.value,\r\n-        password: this.authForm.get('password')?.value\r\n-      };\r\n-      \r\n-      this.user.register(userData).subscribe({\r\n-        next: (response) => {\r\n-          // Show success message\r\n-          this.showLogin = true; // Switch to login form\r\n-        },\r\n-        error: (error) => {\r\n-          console.error('Registration failed', error);\r\n-          // Handle error (show message to user)\r\n-        }\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  checkPasswordMatch(): boolean {\r\n-    const password = this.authForm.get('password')?.value;\r\n-    const confirmPassword = this.authForm.get('confirmPassword')?.value;\r\n-    return password === confirmPassword;\r\n-  }\r\n }\r\n"
                },
                {
                    "date": 1740677123428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n+import { Router } from '@angular/router';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n@@ -9,16 +10,33 @@\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   authForm: FormGroup;\r\n \r\n-  constructor(private fb: FormBuilder) {\r\n+  constructor(\r\n+    private fb: FormBuilder,\r\n+    private router: Router\r\n+  ) {\r\n     this.authForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', [Validators.required, Validators.minLength(6)]],\r\n       confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n     });\r\n   }\r\n+\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n   }\r\n \r\n+  login() {\r\n+    if (this.authForm.valid) {\r\n+      // Navigate to dashboard or home component after login\r\n+      this.router.navigate(['/dashboard']);\r\n+    }\r\n+  }\r\n+\r\n+  register() {\r\n+    if (this.authForm.valid) {\r\n+      // Navigate to login or confirmation component after registration\r\n+      this.router.navigate(['/login']);\r\n+    }\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1740677483082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Component } from '@angular/core';\r\n-import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n+import { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n import { Router } from '@angular/router';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n@@ -14,17 +14,37 @@\n   constructor(\r\n     private fb: FormBuilder,\r\n     private router: Router\r\n   ) {\r\n+    this.createForm();\r\n+  }\r\n+\r\n+  createForm() {\r\n     this.authForm = this.fb.group({\r\n       email: ['', [Validators.required, Validators.email]],\r\n       password: ['', [Validators.required, Validators.minLength(6)]],\r\n-      confirmPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n-    });\r\n+      confirmPassword: ['', [Validators.minLength(6)]]\r\n+    }, { validator: this.passwordMatchValidator });\r\n   }\r\n \r\n+  passwordMatchValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n+    const password = control.get('password');\r\n+    const confirmPassword = control.get('confirmPassword');\r\n+    if (password && confirmPassword && password.value !== confirmPassword.value) {\r\n+      return { 'mismatch': true };\r\n+    }\r\n+    return null;\r\n+  }\r\n+\r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n+    if (this.showLogin) {\r\n+      this.authForm.get('confirmPassword').clearValidators();\r\n+    } else {\r\n+      this.authForm.get('confirmPassword').setValidators([Validators.required, Validators.minLength(6)]);\r\n+    }\r\n+    this.authForm.get('confirmPassword').updateValueAndValidity();\r\n+    this.authForm.reset();\r\n   }\r\n \r\n   login() {\r\n     if (this.authForm.valid) {\r\n@@ -38,5 +58,5 @@\n       // Navigate to login or confirmation component after registration\r\n       this.router.navigate(['/login']);\r\n     }\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740677498311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   styleUrls: ['./auth.component.scss']\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n-  authForm: FormGroup;\r\n+  authForm!: FormGroup;\r\n \r\n   constructor(\r\n     private fb: FormBuilder,\r\n     private router: Router\r\n"
                },
                {
                    "date": 1740677517002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,14 +36,16 @@\n   }\r\n \r\n   toggleForm() {\r\n     this.showLogin = !this.showLogin;\r\n+    const confirmPasswordControl = this.authForm.get('confirmPassword');\r\n+    \r\n     if (this.showLogin) {\r\n-      this.authForm.get('confirmPassword').clearValidators();\r\n+      confirmPasswordControl?.clearValidators();\r\n     } else {\r\n-      this.authForm.get('confirmPassword').setValidators([Validators.required, Validators.minLength(6)]);\r\n+      confirmPasswordControl?.setValidators([Validators.required, Validators.minLength(6)]);\r\n     }\r\n-    this.authForm.get('confirmPassword').updateValueAndValidity();\r\n+    confirmPasswordControl?.updateValueAndValidity();\r\n     this.authForm.reset();\r\n   }\r\n \r\n   login() {\r\n"
                },
                {
                    "date": 1740692341338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,10 @@\n \r\n @Component({\r\n   selector: 'auth-app',\r\n   templateUrl: './auth.component.html',\r\n-  styleUrls: ['./auth.component.scss']\r\n+  styleUrls: ['./auth.component.scss'],\r\n+  imports: [CommonModule, ReactiveFormsModule]\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   authForm!: FormGroup;\r\n"
                },
                {
                    "date": 1740692347479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n+import { CommonModule } from '@angular/common';\r\n import { Component } from '@angular/core';\r\n-import { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n+import { FormBuilder, FormGroup, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\r\n import { Router } from '@angular/router';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n"
                },
                {
                    "date": 1740692405329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { Router } from '@angular/router';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n+  standalone: true,\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss'],\r\n   imports: [CommonModule, ReactiveFormsModule]\r\n })\r\n"
                },
                {
                    "date": 1740692419317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n-import { CommonModule } from '@angular/common';\r\n import { Component } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\r\n import { Router } from '@angular/router';\r\n+import { CommonModule } from '@angular/common';\r\n \r\n @Component({\r\n   selector: 'auth-app',\r\n-  standalone: true,\r\n+  standalone: true, // <-- Add standalone to use Angular's modern approach\r\n   templateUrl: './auth.component.html',\r\n   styleUrls: ['./auth.component.scss'],\r\n-  imports: [CommonModule, ReactiveFormsModule]\r\n+  imports: [CommonModule, ReactiveFormsModule] // <-- Import CommonModule and ReactiveFormsModule\r\n })\r\n export class AuthComponent {\r\n   showLogin: boolean = true;\r\n   authForm!: FormGroup;\r\n@@ -52,16 +52,14 @@\n   }\r\n \r\n   login() {\r\n     if (this.authForm.valid) {\r\n-      // Navigate to dashboard or home component after login\r\n       this.router.navigate(['/dashboard']);\r\n     }\r\n   }\r\n \r\n   register() {\r\n     if (this.authForm.valid) {\r\n-      // Navigate to login or confirmation component after registration\r\n       this.router.navigate(['/login']);\r\n     }\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                }
            ],
            "date": 1740665106531,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'auth-',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent {\r\n  showLogin: boolean = true;\r\n\r\n  toggleForm() {\r\n    this.showLogin = !this.showLogin;\r\n  }\r\n}\r\n"
        }
    ]
}