{
    "sourceFile": "Frontend/src/app/landing/landing.component.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740665451155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740667037697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,168 @@\n-<div class=\"landing-page\">\r\n-  <h1>Text Sentiment Analysis</h1>\r\n-  <p>Analyze the sentiment of your text with our advanced tools.</p>\r\n-  <div class=\"navigation\">\r\n-    <button routerLink=\"/login\">Login</button>\r\n-    <button routerLink=\"/register\">Register</button>\r\n+To achieve this, you need to create the login and register components, set up the routes, and implement the functionality using a dummy service. Here are the steps:\r\n+\r\n+1. **Generate Login and Register Components:**\r\n+  Use Angular CLI to generate the components.\r\n+  ```bash\r\n+  ng generate component login\r\n+  ng generate component register\r\n+  ```\r\n+\r\n+2. **Set Up Routes:**\r\n+  Update your `app-routing.module.ts` to include routes for the login and register components.\r\n+  ```typescript\r\n+  import { NgModule } from '@angular/core';\r\n+  import { RouterModule, Routes } from '@angular/router';\r\n+  import { LandingComponent } from './landing/landing.component';\r\n+  import { LoginComponent } from './login/login.component';\r\n+  import { RegisterComponent } from './register/register.component';\r\n+\r\n+  const routes: Routes = [\r\n+    { path: '', component: LandingComponent },\r\n+    { path: 'login', component: LoginComponent },\r\n+    { path: 'register', component: RegisterComponent }\r\n+  ];\r\n+\r\n+  @NgModule({\r\n+    imports: [RouterModule.forRoot(routes)],\r\n+    exports: [RouterModule]\r\n+  })\r\n+  export class AppRoutingModule { }\r\n+  ```\r\n+\r\n+3. **Create a Dummy Service:**\r\n+  Create a service to handle user data storage and retrieval.\r\n+  ```typescript\r\n+  import { Injectable } from '@angular/core';\r\n+\r\n+  @Injectable({\r\n+    providedIn: 'root'\r\n+  })\r\n+  export class AuthService {\r\n+    private users: any[] = [];\r\n+\r\n+    constructor() { }\r\n+\r\n+    register(user: any) {\r\n+     this.users.push(user);\r\n+     this.saveUsers();\r\n+    }\r\n+\r\n+    login(username: string, password: string): boolean {\r\n+     const user = this.users.find(u => u.username === username && u.password === password);\r\n+     return !!user;\r\n+    }\r\n+\r\n+    private saveUsers() {\r\n+     localStorage.setItem('users', JSON.stringify(this.users));\r\n+    }\r\n+\r\n+    private loadUsers() {\r\n+     const users = localStorage.getItem('users');\r\n+     if (users) {\r\n+      this.users = JSON.parse(users);\r\n+     }\r\n+    }\r\n+  }\r\n+  ```\r\n+\r\n+4. **Implement Register Component:**\r\n+  Update `register.component.ts` and `register.component.html`.\r\n+  ```typescript\r\n+  import { Component } from '@angular/core';\r\n+  import { AuthService } from '../auth.service';\r\n+\r\n+  @Component({\r\n+    selector: 'app-register',\r\n+    templateUrl: './register.component.html',\r\n+    styleUrls: ['./register.component.css']\r\n+  })\r\n+  export class RegisterComponent {\r\n+    username: string = '';\r\n+    password: string = '';\r\n+\r\n+    constructor(private authService: AuthService) { }\r\n+\r\n+    register() {\r\n+     this.authService.register({ username: this.username, password: this.password });\r\n+     alert('Registration successful!');\r\n+    }\r\n+  }\r\n+  ```\r\n+\r\n+  ```html\r\n+  <div>\r\n+    <h2>Register</h2>\r\n+    <input [(ngModel)]=\"username\" placeholder=\"Username\" />\r\n+    <input [(ngModel)]=\"password\" type=\"password\" placeholder=\"Password\" />\r\n+    <button (click)=\"register()\">Register</button>\r\n   </div>\r\n-</div>\r\n+  ```\r\n+\r\n+5. **Implement Login Component:**\r\n+  Update `login.component.ts` and `login.component.html`.\r\n+  ```typescript\r\n+  import { Component } from '@angular/core';\r\n+  import { AuthService } from '../auth.service';\r\n+\r\n+  @Component({\r\n+    selector: 'app-login',\r\n+    templateUrl: './login.component.html',\r\n+    styleUrls: ['./login.component.css']\r\n+  })\r\n+  export class LoginComponent {\r\n+    username: string = '';\r\n+    password: string = '';\r\n+\r\n+    constructor(private authService: AuthService) { }\r\n+\r\n+    login() {\r\n+     if (this.authService.login(this.username, this.password)) {\r\n+      alert('Login successful!');\r\n+     } else {\r\n+      alert('Invalid credentials');\r\n+     }\r\n+    }\r\n+  }\r\n+  ```\r\n+\r\n+  ```html\r\n+  <div>\r\n+    <h2>Login</h2>\r\n+    <input [(ngModel)]=\"username\" placeholder=\"Username\" />\r\n+    <input [(ngModel)]=\"password\" type=\"password\" placeholder=\"Password\" />\r\n+    <button (click)=\"login()\">Login</button>\r\n+  </div>\r\n+  ```\r\n+\r\n+6. **Update App Module:**\r\n+  Ensure `FormsModule` is imported in `app.module.ts`.\r\n+  ```typescript\r\n+  import { NgModule } from '@angular/core';\r\n+  import { BrowserModule } from '@angular/platform-browser';\r\n+  import { FormsModule } from '@angular/forms';\r\n+  import { AppRoutingModule } from './app-routing.module';\r\n+  import { AppComponent } from './app.component';\r\n+  import { LandingComponent } from './landing/landing.component';\r\n+  import { LoginComponent } from './login/login.component';\r\n+  import { RegisterComponent } from './register/register.component';\r\n+  import { AuthService } from './auth.service';\r\n+\r\n+  @NgModule({\r\n+    declarations: [\r\n+     AppComponent,\r\n+     LandingComponent,\r\n+     LoginComponent,\r\n+     RegisterComponent\r\n+    ],\r\n+    imports: [\r\n+     BrowserModule,\r\n+     AppRoutingModule,\r\n+     FormsModule\r\n+    ],\r\n+    providers: [AuthService],\r\n+    bootstrap: [AppComponent]\r\n+  })\r\n+  export class AppModule { }\r\n+  ```\r\n+\r\n+This setup will allow you to register and login users using a dummy service that stores user data in the browser's local storage.\r\n"
                },
                {
                    "date": 1740667043456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,168 +1,8 @@\n-To achieve this, you need to create the login and register components, set up the routes, and implement the functionality using a dummy service. Here are the steps:\r\n-\r\n-1. **Generate Login and Register Components:**\r\n-  Use Angular CLI to generate the components.\r\n-  ```bash\r\n-  ng generate component login\r\n-  ng generate component register\r\n-  ```\r\n-\r\n-2. **Set Up Routes:**\r\n-  Update your `app-routing.module.ts` to include routes for the login and register components.\r\n-  ```typescript\r\n-  import { NgModule } from '@angular/core';\r\n-  import { RouterModule, Routes } from '@angular/router';\r\n-  import { LandingComponent } from './landing/landing.component';\r\n-  import { LoginComponent } from './login/login.component';\r\n-  import { RegisterComponent } from './register/register.component';\r\n-\r\n-  const routes: Routes = [\r\n-    { path: '', component: LandingComponent },\r\n-    { path: 'login', component: LoginComponent },\r\n-    { path: 'register', component: RegisterComponent }\r\n-  ];\r\n-\r\n-  @NgModule({\r\n-    imports: [RouterModule.forRoot(routes)],\r\n-    exports: [RouterModule]\r\n-  })\r\n-  export class AppRoutingModule { }\r\n-  ```\r\n-\r\n-3. **Create a Dummy Service:**\r\n-  Create a service to handle user data storage and retrieval.\r\n-  ```typescript\r\n-  import { Injectable } from '@angular/core';\r\n-\r\n-  @Injectable({\r\n-    providedIn: 'root'\r\n-  })\r\n-  export class AuthService {\r\n-    private users: any[] = [];\r\n-\r\n-    constructor() { }\r\n-\r\n-    register(user: any) {\r\n-     this.users.push(user);\r\n-     this.saveUsers();\r\n-    }\r\n-\r\n-    login(username: string, password: string): boolean {\r\n-     const user = this.users.find(u => u.username === username && u.password === password);\r\n-     return !!user;\r\n-    }\r\n-\r\n-    private saveUsers() {\r\n-     localStorage.setItem('users', JSON.stringify(this.users));\r\n-    }\r\n-\r\n-    private loadUsers() {\r\n-     const users = localStorage.getItem('users');\r\n-     if (users) {\r\n-      this.users = JSON.parse(users);\r\n-     }\r\n-    }\r\n-  }\r\n-  ```\r\n-\r\n-4. **Implement Register Component:**\r\n-  Update `register.component.ts` and `register.component.html`.\r\n-  ```typescript\r\n-  import { Component } from '@angular/core';\r\n-  import { AuthService } from '../auth.service';\r\n-\r\n-  @Component({\r\n-    selector: 'app-register',\r\n-    templateUrl: './register.component.html',\r\n-    styleUrls: ['./register.component.css']\r\n-  })\r\n-  export class RegisterComponent {\r\n-    username: string = '';\r\n-    password: string = '';\r\n-\r\n-    constructor(private authService: AuthService) { }\r\n-\r\n-    register() {\r\n-     this.authService.register({ username: this.username, password: this.password });\r\n-     alert('Registration successful!');\r\n-    }\r\n-  }\r\n-  ```\r\n-\r\n-  ```html\r\n-  <div>\r\n-    <h2>Register</h2>\r\n-    <input [(ngModel)]=\"username\" placeholder=\"Username\" />\r\n-    <input [(ngModel)]=\"password\" type=\"password\" placeholder=\"Password\" />\r\n-    <button (click)=\"register()\">Register</button>\r\n+<div class=\"landing-page\">\r\n+  <h1>Text Sentiment Analysis</h1>\r\n+  <p>Analyze the sentiment of your text with our advanced tools.</p>\r\n+  <div class=\"navigation\">\r\n+    <button routerLink=\"/login\">Login</button>\r\n+    <button routerLink=\"/register\">Register</button>\r\n   </div>\r\n-  ```\r\n-\r\n-5. **Implement Login Component:**\r\n-  Update `login.component.ts` and `login.component.html`.\r\n-  ```typescript\r\n-  import { Component } from '@angular/core';\r\n-  import { AuthService } from '../auth.service';\r\n-\r\n-  @Component({\r\n-    selector: 'app-login',\r\n-    templateUrl: './login.component.html',\r\n-    styleUrls: ['./login.component.css']\r\n-  })\r\n-  export class LoginComponent {\r\n-    username: string = '';\r\n-    password: string = '';\r\n-\r\n-    constructor(private authService: AuthService) { }\r\n-\r\n-    login() {\r\n-     if (this.authService.login(this.username, this.password)) {\r\n-      alert('Login successful!');\r\n-     } else {\r\n-      alert('Invalid credentials');\r\n-     }\r\n-    }\r\n-  }\r\n-  ```\r\n-\r\n-  ```html\r\n-  <div>\r\n-    <h2>Login</h2>\r\n-    <input [(ngModel)]=\"username\" placeholder=\"Username\" />\r\n-    <input [(ngModel)]=\"password\" type=\"password\" placeholder=\"Password\" />\r\n-    <button (click)=\"login()\">Login</button>\r\n-  </div>\r\n-  ```\r\n-\r\n-6. **Update App Module:**\r\n-  Ensure `FormsModule` is imported in `app.module.ts`.\r\n-  ```typescript\r\n-  import { NgModule } from '@angular/core';\r\n-  import { BrowserModule } from '@angular/platform-browser';\r\n-  import { FormsModule } from '@angular/forms';\r\n-  import { AppRoutingModule } from './app-routing.module';\r\n-  import { AppComponent } from './app.component';\r\n-  import { LandingComponent } from './landing/landing.component';\r\n-  import { LoginComponent } from './login/login.component';\r\n-  import { RegisterComponent } from './register/register.component';\r\n-  import { AuthService } from './auth.service';\r\n-\r\n-  @NgModule({\r\n-    declarations: [\r\n-     AppComponent,\r\n-     LandingComponent,\r\n-     LoginComponent,\r\n-     RegisterComponent\r\n-    ],\r\n-    imports: [\r\n-     BrowserModule,\r\n-     AppRoutingModule,\r\n-     FormsModule\r\n-    ],\r\n-    providers: [AuthService],\r\n-    bootstrap: [AppComponent]\r\n-  })\r\n-  export class AppModule { }\r\n-  ```\r\n-\r\n-This setup will allow you to register and login users using a dummy service that stores user data in the browser's local storage.\r\n+</div>\r\n"
                }
            ],
            "date": 1740665451155,
            "name": "Commit-0",
            "content": "<div class=\"landing-page\">\r\n  <h1>Text Sentiment Analysis</h1>\r\n  <p>Analyze the sentiment of your text with our advanced tools.</p>\r\n  <div class=\"navigation\">\r\n    <button routerLink=\"/login\">Login</button>\r\n    <button routerLink=\"/register\">Register</button>\r\n  </div>\r\n</div>\r\n"
        }
    ]
}